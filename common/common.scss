// discourse-guest-gate-theme-component/common.scss (or wherever this snippet is)

.d-modal.gate {
  // if custom gate enabled
  &.custom-gate {
    .d-modal__container {
      // Use theme-setting for background color from settings.yml
      background-color: var(--d-custom-gate-background-color, theme-setting("custom_gate_background_color"));
    }
    .d-modal__footer {
      // Use theme-setting for footer text color from settings.yml
      color: var(--d-custom-gate-footer-text-color, theme-setting("custom_gate_footer_text_color"));
      .btn-transparent {
        // Use theme-setting for link color from settings.yml
        color: var(--d-custom-gate-link-color, theme-setting("custom_gate_link_color"));
      }
    }
    .custom-gate-content {
      // Use theme-setting for image position from settings.yml
      text-align: var(--d-custom-gate-image-position, theme-setting("custom_gate_image_position"));
      img {
        // Use theme-setting for image width from settings.yml
        width: var(--d-custom-gate-image-width, theme-setting("custom_gate_image_width"));
        height: auto;
        margin-bottom: 0.75em;
      }
      h2 {
        // Use theme-setting for big text color from settings.yml
        color: var(--d-custom-gate-big-text-color, theme-setting("custom_gate_big_text_color"));
        // Use theme-setting for big text position from settings.yml
        text-align: var(--d-custom-gate-big-text-position, theme-setting("custom_gate_big_text_position"));
      }
      p {
        // Use theme-setting for little text color from settings.yml
        color: var(--d-custom-gate-little-text-color, theme-setting("custom_gate_little_text_color"));
        // Use theme-setting for little text position from settings.gjs
        text-align: var(--d-custom-gate-little-text-position, theme-setting("custom_gate_little_text_position"));
      }
    }
  }
  .d-modal__container {
    background-color: var(--secondary);
  }
  .d-modal__header {
    border-bottom: none;
  }
  .d-modal__body {
    padding: 0 1em;
  }
  .d-modal__footer {
    color: var(--primary-medium);
    // FIX: Correctly access gate_footer_position from settings.yml
    justify-content: var(--d-gate-footer-position, theme-setting("gate_footer_position"));
    .btn-transparent {
      color: var(--primary-medium);
      outline: none;
      padding: 0;
      margin: 0 0.25em;
    }
  }
  // Commented out as LoginButtons component was removed from .gjs
  // If you still have other login buttons that need this styling, uncomment and adapt.
  // #login-buttons {
  //   margin-bottom: 0.75em;
  //   text-align: center;
  //   .btn-social {
  //     margin: 0.25em;
  //     .mobile-view & {
  //       width: 100%;
  //     }
  //     &:focus,
  //     &:hover {
  //       background: var(--secondary);
  //       color: var(--primary);
  //       .d-icon {
  //         color: var(--primary);
  //       }
  //     }
  //   }
  //   .mobile-view & {
  //     width: 100%;
  //   }
  // }
}

// Assuming $gate-show-when-thumbnail-clicked is a SASS variable set elsewhere,
// or if it's a theme setting, it needs to be accessed differently (e.g., in JS for conditional class).
// If this is a direct boolean setting from settings.yml, this @if won't work directly in SCSS.
// You'd typically add a class to body/html via JS if this setting is true.
@if $gate-show-when-thumbnail-clicked == "true" {
  .anon {
    // Old lightbox
    .mfp-wrap {
      button,
      .mfp-preloader {
        display: none;
      }
    }
    // New lightbox
    #discourse-lightbox {
      display: none;
    }
  }
}
